---
spring:
  config:
    activate:
      on-profile: db
  jpa:
    open-in-view: true
    database-platform: org.hibernate.dialect.PostgreSQL10Dialect
    hibernate:
      ddl-auto: validate
    show-sql: false
  datasource:
    url: ${POSTGRES_URL:jdbc:postgresql://localhost:5432/diplom_2022}
    initialization-mode: never
    hikari:
      jdbc-url: ${spring.datasource.url}
      username: ${POSTGRES_USER:superuser}
      password: ${POSTGRES_PASSWORD:123456superuser}
      driver-class-name: org.postgresql.Driver
      maximum-pool-size: 5
      minimum-idle: 1

---
spring:
  config:
    activate:
      on-profile: feign
feign:
  client:
    config:
      default:
        connectTimeout: 1000
        readTimeout: 60000
        loggerLevel: basic

---
spring:
  config:
    activate:
      on-profile: web
server:
  error:
    include-message: always
    include-stacktrace: always

---
spring:
  config:
    activate:
      on-profile: security
  session:
    store-type: jdbc

---
spring:
  config:
    activate:
      on-profile: kafka
  kafka:
    bootstrap-servers: ${KAFKA_SERVER_URL_EXT:localhost:19092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 0x7fffffff # Integer.MAX_VALUE
      compressionType: snappy
      batchSize: 32768
      properties:
        linger.ms: 20
        max.request.size: 104857600
        buffer.memory: 104857600
    consumer:
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      auto-offset-reset: earliest
      properties:
        max.partition.fetch.bytes: 104857600
        spring.json.trusted.packages: "*"
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer